

class LinkedList {
  constructor(value) {
    this.head = {
      value: value,
      next: null
    };
    this.tail = this.head;
    this.length = 1;
  }
  append(value) {
    const newNode = {
      value: value,
      next: null
    }
    this.tail.next = newNode;
    this.tail = newNode;
    this.length++;
    return this;
  }
  prepend(value) {
    const newNode = {
      value: value,
      next: null
    }
    newNode.next = this.head;
    this.head = newNode;
    this.length++;
    return this;
  }
  printList() {
    const array = [];
    let currentNode = this.head;
    while(currentNode !== null){
        array.push(currentNode.value)
        currentNode = currentNode.next
    }
    return array;
  }
  insert(index, value){
    let currentNode=this.head;
    let count =0;
    const newNode = {
      value: value,
      next: null
    }
    while(count!== index-1){
      currentNode= currentNode.next
      count++
    }
    newNode.next=currentNode.next;
    currentNode.next= newNode;
    this.length++;
    
  }
  remove(index){
    let count=0;
     let currentNode=this.head;
     while(count!== index-1){
      currentNode= currentNode.next
      count++
    }
    currentNode.next= currentNode.next.next;
    this.length--
  }
}

let myLinkedList = new LinkedList(10);
myLinkedList.append(5);
myLinkedList.append(16);
myLinkedList.prepend(1)
myLinkedList.insert(2, 99)
myLinkedList.remove(3); 
myLinkedList.printList()
myLinkedList.insert(20, 88)



